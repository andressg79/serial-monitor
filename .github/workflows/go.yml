name: Go CI

on:
  push:
    branches: [ main ]

env:
  GO_VERSION: 'v1.22.5'
  GOLANGCI_LINT_VERSION: v1.60

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
        
      - name: Lint
        uses: golangci/golangci-lint-action@v6

      - name: Vet
        run: go vet ./...

      - name: Test and coverage
        run: go test ./... -coverprofile=./cover.out -covermode=atomic -coverpkg=./...
    
      - name: check test coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          # Configure action using config file (option 1)
          config: ./.testcoverage.yml

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        if: ${{ success() && steps.test.conclusion == 'success' && steps.lint.conclusion == 'success' && steps.vet.conclusion == 'success' && steps.coverage.conclusion == 'success' }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.run_number }}
          body: Automatic release created by GitHub Actions# This workflow will build a golang project
          run: |
            goreleaser release --snapshot